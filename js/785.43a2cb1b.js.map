{"version":3,"file":"js/785.43a2cb1b.js","mappings":"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","sources":["webpack://zhizhi_cms/../../../packages/components/tree/src/model/util.ts","webpack://zhizhi_cms/../../../packages/components/tree/src/model/node.ts","webpack://zhizhi_cms/../../../packages/components/tree/src/model/tree-store.ts","webpack://zhizhi_cms/../../../packages/components/tree/src/tree-node-content.vue","webpack://zhizhi_cms/../../../packages/components/tree/src/model/useNodeExpandEventBroadcast.ts","webpack://zhizhi_cms/../../../packages/components/tree/src/model/useDragNode.ts","webpack://zhizhi_cms/../../../packages/components/tree/src/tree-node.vue","webpack://zhizhi_cms/../../../packages/components/tree/src/model/useKeydown.ts","webpack://zhizhi_cms/../../../packages/components/tree/src/tree.vue","webpack://zhizhi_cms/../../../packages/components/tree/index.ts","webpack://zhizhi_cms/../../../packages/directives/trap-focus/index.ts","webpack://zhizhi_cms/../../../packages/utils/vue/validator.ts","webpack://zhizhi_cms/../../../packages/hooks/use-restore-active/index.ts","webpack://zhizhi_cms/../../../packages/components/message-box/src/index.vue","webpack://zhizhi_cms/../../../packages/components/message-box/src/messageBox.ts","webpack://zhizhi_cms/../../../packages/components/message-box/index.ts","webpack://zhizhi_cms/../../../packages/components/config-provider/src/config-provider.ts","webpack://zhizhi_cms/../../../packages/components/badge/src/badge.ts","webpack://zhizhi_cms/../../../packages/components/badge/src/badge.vue","webpack://zhizhi_cms/../../../packages/components/badge/index.ts","webpack://zhizhi_cms/../../../packages/components/message/src/message.ts","webpack://zhizhi_cms/../../../packages/components/message/src/instance.ts","webpack://zhizhi_cms/../../../packages/components/message/src/message.vue","webpack://zhizhi_cms/../../../packages/components/message/src/method.ts","webpack://zhizhi_cms/../../../packages/components/message/index.ts","webpack://zhizhi_cms/../../../packages/components/notification/src/notification.ts","webpack://zhizhi_cms/../../../packages/components/notification/src/notification.vue","webpack://zhizhi_cms/../../../packages/components/notification/src/notify.ts","webpack://zhizhi_cms/../../../packages/components/notification/index.ts","webpack://zhizhi_cms/./src/views/permission/roleView.vue","webpack://zhizhi_cms/./src/views/permission/roleView.vue?66b7"],"sourcesContent":["import type Node from './node'\nimport type { TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n","// @ts-nocheck\nimport { reactive } from 'vue'\nimport { hasOwn } from '@element-plus/utils'\nimport { NODE_KEY, markNodeData } from './util'\nimport type TreeStore from './tree-store'\n\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  FakeNode,\n  TreeKey,\n  TreeNodeChildState,\n  TreeNodeData,\n  TreeNodeLoadedDefaultProps,\n  TreeNodeOptions,\n} from '../tree.type'\n\nexport const getChildState = (node: Node[]): TreeNodeChildState => {\n  let all = true\n  let none = true\n  let allWithoutDisable = true\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i]\n    if (n.checked !== true || n.indeterminate) {\n      all = false\n      if (!n.disabled) {\n        allWithoutDisable = false\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false\n    }\n  }\n\n  return { all, none, allWithoutDisable, half: !all && !none }\n}\n\nconst reInitChecked = function (node: Node): void {\n  if (node.childNodes.length === 0) return\n\n  const { all, none, half } = getChildState(node.childNodes)\n  if (all) {\n    node.checked = true\n    node.indeterminate = false\n  } else if (half) {\n    node.checked = false\n    node.indeterminate = true\n  } else if (none) {\n    node.checked = false\n    node.indeterminate = false\n  }\n\n  const parent = node.parent\n  if (!parent || parent.level === 0) return\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent)\n  }\n}\n\nconst getPropertyFromData = function (node: Node, prop: string): any {\n  const props = node.store.props\n  const data = node.data || {}\n  const config = props[prop]\n\n  if (typeof config === 'function') {\n    return config(data, node)\n  } else if (typeof config === 'string') {\n    return data[config]\n  } else if (typeof config === 'undefined') {\n    const dataProp = data[prop]\n    return dataProp === undefined ? '' : dataProp\n  }\n}\n\nlet nodeIdSeed = 0\n\nclass Node {\n  id: number\n  text: string\n  checked: boolean\n  indeterminate: boolean\n  data: TreeNodeData\n  expanded: boolean\n  parent: Node\n  visible: boolean\n  isCurrent: boolean\n  store: TreeStore\n  isLeafByUser: boolean\n  isLeaf: boolean\n  canFocus: boolean\n\n  level: number\n  loaded: boolean\n  childNodes: Node[]\n  loading: boolean\n\n  constructor(options: TreeNodeOptions) {\n    this.id = nodeIdSeed++\n    this.text = null\n    this.checked = false\n    this.indeterminate = false\n    this.data = null\n    this.expanded = false\n    this.parent = null\n    this.visible = true\n    this.isCurrent = false\n    this.canFocus = false\n\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name]\n      }\n    }\n\n    // internal\n    this.level = 0\n    this.loaded = false\n    this.childNodes = []\n    this.loading = false\n\n    if (this.parent) {\n      this.level = this.parent.level + 1\n    }\n  }\n\n  initialize() {\n    const store = this.store\n    if (!store) {\n      throw new Error('[Node]store is required!')\n    }\n    store.registerNode(this)\n\n    const props = store.props\n    if (props && typeof props.isLeaf !== 'undefined') {\n      const isLeaf = getPropertyFromData(this, 'isLeaf')\n      if (typeof isLeaf === 'boolean') {\n        this.isLeafByUser = isLeaf\n      }\n    }\n\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data)\n\n      if (store.defaultExpandAll) {\n        this.expanded = true\n        this.canFocus = true\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand()\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data)\n    }\n    if (!this.data) return\n\n    const defaultExpandedKeys = store.defaultExpandedKeys\n    const key = store.key\n\n    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {\n      this.expand(null, store.autoExpandParent)\n    }\n\n    if (\n      key &&\n      store.currentNodeKey !== undefined &&\n      this.key === store.currentNodeKey\n    ) {\n      store.currentNode = this\n      store.currentNode.isCurrent = true\n    }\n\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this)\n    }\n\n    this.updateLeafState()\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true\n  }\n\n  setData(data: TreeNodeData): void {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data)\n    }\n\n    this.data = data\n    this.childNodes = []\n\n    let children\n    if (this.level === 0 && Array.isArray(this.data)) {\n      children = this.data\n    } else {\n      children = getPropertyFromData(this, 'children') || []\n    }\n\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] })\n    }\n  }\n\n  get label(): string {\n    return getPropertyFromData(this, 'label')\n  }\n\n  get key(): TreeKey {\n    const nodeKey = this.store.key\n    if (this.data) return this.data[nodeKey]\n    return null\n  }\n\n  get disabled(): boolean {\n    return getPropertyFromData(this, 'disabled')\n  }\n\n  get nextSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return parent.childNodes[index + 1]\n      }\n    }\n    return null\n  }\n\n  get previousSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null\n      }\n    }\n    return null\n  }\n\n  contains(target: Node, deep = true): boolean {\n    return (this.childNodes || []).some(\n      (child) => child === target || (deep && child.contains(target))\n    )\n  }\n\n  remove(): void {\n    const parent = this.parent\n    if (parent) {\n      parent.removeChild(this)\n    }\n  }\n\n  insertChild(child?: FakeNode | Node, index?: number, batch?: boolean): void {\n    if (!child) throw new Error('InsertChild error: child is required.')\n\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true)\n        if (!children.includes(child.data)) {\n          if (typeof index === 'undefined' || index < 0) {\n            children.push(child.data)\n          } else {\n            children.splice(index, 0, child.data)\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store,\n      })\n      child = reactive(new Node(child as TreeNodeOptions))\n      if (child instanceof Node) {\n        child.initialize()\n      }\n    }\n\n    ;(child as Node).level = this.level + 1\n\n    if (typeof index === 'undefined' || index < 0) {\n      this.childNodes.push(child as Node)\n    } else {\n      this.childNodes.splice(index, 0, child as Node)\n    }\n\n    this.updateLeafState()\n  }\n\n  insertBefore(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n    }\n    this.insertChild(child, index)\n  }\n\n  insertAfter(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n      if (index !== -1) index += 1\n    }\n    this.insertChild(child, index)\n  }\n\n  removeChild(child: Node): void {\n    const children = this.getChildren() || []\n    const dataIndex = children.indexOf(child.data)\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1)\n    }\n\n    const index = this.childNodes.indexOf(child)\n\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child)\n      child.parent = null\n      this.childNodes.splice(index, 1)\n    }\n\n    this.updateLeafState()\n  }\n\n  removeChildByData(data: TreeNodeData): void {\n    let targetNode: Node = null\n\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i]\n        break\n      }\n    }\n\n    if (targetNode) {\n      this.removeChild(targetNode)\n    }\n  }\n\n  expand(callback?: () => void, expandParent?: boolean): void {\n    const done = (): void => {\n      if (expandParent) {\n        let parent = this.parent\n        while (parent.level > 0) {\n          parent.expanded = true\n          parent = parent.parent\n        }\n      }\n      this.expanded = true\n      if (callback) callback()\n      this.childNodes.forEach((item) => {\n        item.canFocus = true\n      })\n    }\n\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true)\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this)\n          }\n          done()\n        }\n      })\n    } else {\n      done()\n    }\n  }\n\n  doCreateChildren(\n    array: TreeNodeData[],\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ): void {\n    array.forEach((item) => {\n      this.insertChild(\n        Object.assign({ data: item }, defaultProps),\n        undefined,\n        true\n      )\n    })\n  }\n\n  collapse(): void {\n    this.expanded = false\n    this.childNodes.forEach((item) => {\n      item.canFocus = false\n    })\n  }\n\n  shouldLoadData(): boolean {\n    return this.store.lazy === true && this.store.load && !this.loaded\n  }\n\n  updateLeafState(): void {\n    if (\n      this.store.lazy === true &&\n      this.loaded !== true &&\n      typeof this.isLeafByUser !== 'undefined'\n    ) {\n      this.isLeaf = this.isLeafByUser\n      return\n    }\n    const childNodes = this.childNodes\n    if (\n      !this.store.lazy ||\n      (this.store.lazy === true && this.loaded === true)\n    ) {\n      this.isLeaf = !childNodes || childNodes.length === 0\n      return\n    }\n    this.isLeaf = false\n  }\n\n  setChecked(\n    value?: boolean | string,\n    deep?: boolean,\n    recursion?: boolean,\n    passValue?: boolean\n  ) {\n    this.indeterminate = value === 'half'\n    this.checked = value === true\n\n    if (this.store.checkStrictly) return\n\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes)\n\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false\n        value = false\n      }\n\n      const handleDescendants = (): void => {\n        if (deep) {\n          const childNodes = this.childNodes\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i]\n            passValue = passValue || value !== false\n            const isCheck = child.disabled ? child.checked : passValue\n            child.setChecked(isCheck, deep, true, passValue)\n          }\n          const { half, all } = getChildState(childNodes)\n          if (!all) {\n            this.checked = all\n            this.indeterminate = half\n          }\n        }\n      }\n\n      if (this.shouldLoadData()) {\n        // Only work on lazy load data.\n        this.loadData(\n          () => {\n            handleDescendants()\n            reInitChecked(this)\n          },\n          {\n            checked: value !== false,\n          }\n        )\n        return\n      } else {\n        handleDescendants()\n      }\n    }\n\n    const parent = this.parent\n    if (!parent || parent.level === 0) return\n\n    if (!recursion) {\n      reInitChecked(parent)\n    }\n  }\n\n  getChildren(forceInit = false): TreeNodeData | TreeNodeData[] {\n    // this is data\n    if (this.level === 0) return this.data\n    const data = this.data\n    if (!data) return null\n\n    const props = this.store.props\n    let children = 'children'\n    if (props) {\n      children = props.children || 'children'\n    }\n\n    if (data[children] === undefined) {\n      data[children] = null\n    }\n\n    if (forceInit && !data[children]) {\n      data[children] = []\n    }\n\n    return data[children]\n  }\n\n  updateChildren(): void {\n    const newData = (this.getChildren() || []) as TreeNodeData[]\n    const oldData = this.childNodes.map((node) => node.data)\n\n    const newDataMap = {}\n    const newNodes = []\n\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY]\n      const isNodeExists =\n        !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item }\n      } else {\n        newNodes.push({ index, data: item })\n      }\n    })\n\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]]) this.removeChildByData(item)\n      })\n    }\n\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index)\n    })\n\n    this.updateLeafState()\n  }\n\n  loadData(\n    callback: (node: Node) => void,\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ) {\n    if (\n      this.store.lazy === true &&\n      this.store.load &&\n      !this.loaded &&\n      (!this.loading || Object.keys(defaultProps).length)\n    ) {\n      this.loading = true\n\n      const resolve = (children) => {\n        this.loaded = true\n        this.loading = false\n        this.childNodes = []\n\n        this.doCreateChildren(children, defaultProps)\n\n        this.updateLeafState()\n        if (callback) {\n          callback.call(this, children)\n        }\n      }\n\n      this.store.load(this, resolve)\n    } else {\n      if (callback) {\n        callback.call(this)\n      }\n    }\n  }\n}\n\nexport default Node\n","// @ts-nocheck\nimport { hasOwn } from '@element-plus/utils'\nimport Node from './node'\nimport { getNodeKey } from './util'\n\nimport type {\n  FilterNodeMethodFunction,\n  FilterValue,\n  LoadFunction,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n  TreeOptionProps,\n  TreeStoreNodesMap,\n  TreeStoreOptions,\n} from '../tree.type'\n\nexport default class TreeStore {\n  currentNode: Node\n  currentNodeKey: TreeKey\n  nodesMap: TreeStoreNodesMap\n  root: Node\n  data: TreeData\n  lazy: boolean\n  load: LoadFunction\n  filterNodeMethod: FilterNodeMethodFunction\n  key: TreeKey\n  defaultCheckedKeys: TreeKey[]\n  checkStrictly: boolean\n  defaultExpandedKeys: TreeKey[]\n  autoExpandParent: boolean\n  defaultExpandAll: boolean\n  checkDescendants: boolean\n  props: TreeOptionProps\n\n  constructor(options: TreeStoreOptions) {\n    this.currentNode = null\n    this.currentNodeKey = null\n\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option]\n      }\n    }\n\n    this.nodesMap = {}\n  }\n\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this,\n    })\n    this.root.initialize()\n\n    if (this.lazy && this.load) {\n      const loadFn = this.load\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data)\n        this._initDefaultCheckedNodes()\n      })\n    } else {\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  filter(value: FilterValue): void {\n    const filterNodeMethod = this.filterNodeMethod\n    const lazy = this.lazy\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child)\n\n        traverse(child)\n      })\n\n      if (!(node as Node).visible && childNodes.length) {\n        let allHidden = true\n        allHidden = !childNodes.some((child) => child.visible)\n\n        if ((node as TreeStore).root) {\n          ;(node as TreeStore).root.visible = allHidden === false\n        } else {\n          ;(node as Node).visible = allHidden === false\n        }\n      }\n      if (!value) return\n\n      if ((node as Node).visible && !(node as Node).isLeaf && !lazy)\n        (node as Node).expand()\n    }\n\n    traverse(this)\n  }\n\n  setData(newVal: TreeData): void {\n    const instanceChanged = newVal !== this.root.data\n    if (instanceChanged) {\n      this.root.setData(newVal)\n      this._initDefaultCheckedNodes()\n    } else {\n      this.root.updateChildren()\n    }\n  }\n\n  getNode(data: TreeKey | TreeNodeData): Node {\n    if (data instanceof Node) return data\n    const key = typeof data !== 'object' ? data : getNodeKey(this.key, data)\n    return this.nodesMap[key] || null\n  }\n\n  insertBefore(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertBefore({ data }, refNode)\n  }\n\n  insertAfter(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertAfter({ data }, refNode)\n  }\n\n  remove(data: TreeNodeData | Node): void {\n    const node = this.getNode(data)\n\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null\n      }\n      node.parent.removeChild(node)\n    }\n  }\n\n  append(data: TreeNodeData, parentData: TreeNodeData | TreeKey | Node): void {\n    const parentNode = parentData ? this.getNode(parentData) : this.root\n\n    if (parentNode) {\n      parentNode.insertChild({ data })\n    }\n  }\n\n  _initDefaultCheckedNodes(): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n    const nodesMap = this.nodesMap\n\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey]\n\n      if (node) {\n        node.setChecked(true, !this.checkStrictly)\n      }\n    })\n  }\n\n  _initDefaultCheckedNode(node: Node): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n\n    if (defaultCheckedKeys.includes(node.key)) {\n      node.setChecked(true, !this.checkStrictly)\n    }\n  }\n\n  setDefaultCheckedKey(newVal: TreeKey[]): void {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  registerNode(node: Node): void {\n    const key = this.key\n    if (!node || !node.data) return\n\n    if (!key) {\n      this.nodesMap[node.id] = node\n    } else {\n      const nodeKey = node.key\n      if (nodeKey !== undefined) this.nodesMap[node.key] = node\n    }\n  }\n\n  deregisterNode(node: Node): void {\n    const key = this.key\n    if (!key || !node || !node.data) return\n\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child)\n    })\n\n    delete this.nodesMap[node.key]\n  }\n\n  getCheckedNodes(\n    leafOnly = false,\n    includeHalfChecked = false\n  ): TreeNodeData[] {\n    const checkedNodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (\n          (child.checked || (includeHalfChecked && child.indeterminate)) &&\n          (!leafOnly || (leafOnly && child.isLeaf))\n        ) {\n          checkedNodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return checkedNodes\n  }\n\n  getCheckedKeys(leafOnly = false): TreeKey[] {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key])\n  }\n\n  getHalfCheckedNodes(): TreeNodeData[] {\n    const nodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return nodes\n  }\n\n  getHalfCheckedKeys(): TreeKey[] {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key])\n  }\n\n  _getAllNodes(): Node[] {\n    const allNodes: Node[] = []\n    const nodesMap = this.nodesMap\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey])\n      }\n    }\n\n    return allNodes\n  }\n\n  updateChildren(key: TreeKey, data: TreeData): void {\n    const node = this.nodesMap[key]\n    if (!node) return\n    const childNodes = node.childNodes\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i]\n      this.remove(child.data)\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i]\n      this.append(child, node.data)\n    }\n  }\n\n  _setCheckedKeys(\n    key: TreeKey,\n    leafOnly = false,\n    checkedKeys: { [key: string]: boolean }\n  ): void {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level)\n    const cache = Object.create(null)\n    const keys = Object.keys(checkedKeys)\n    allNodes.forEach((node) => node.setChecked(false, false))\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i]\n      const nodeKey = node.data[key].toString()\n      const checked = keys.includes(nodeKey)\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false)\n        }\n        continue\n      }\n\n      let parent = node.parent\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true\n        parent = parent.parent\n      }\n\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false)\n        continue\n      }\n      node.setChecked(true, true)\n\n      if (leafOnly) {\n        node.setChecked(false, false)\n        const traverse = function (node: Node): void {\n          const childNodes = node.childNodes\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false)\n            }\n            traverse(child)\n          })\n        }\n        traverse(node)\n      }\n    }\n  }\n\n  setCheckedNodes(array: Node[], leafOnly = false): void {\n    const key = this.key\n    const checkedKeys = {}\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setCheckedKeys(keys: TreeKey[], leafOnly = false): void {\n    this.defaultCheckedKeys = keys\n    const key = this.key\n    const checkedKeys = {}\n    keys.forEach((key) => {\n      checkedKeys[key] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setDefaultExpandedKeys(keys: TreeKey[]) {\n    keys = keys || []\n    this.defaultExpandedKeys = keys\n    keys.forEach((key) => {\n      const node = this.getNode(key)\n      if (node) node.expand(null, this.autoExpandParent)\n    })\n  }\n\n  setChecked(\n    data: TreeKey | TreeNodeData,\n    checked: boolean,\n    deep: boolean\n  ): void {\n    const node = this.getNode(data)\n\n    if (node) {\n      node.setChecked(!!checked, deep)\n    }\n  }\n\n  getCurrentNode(): Node {\n    return this.currentNode\n  }\n\n  setCurrentNode(currentNode: Node): void {\n    const prevCurrentNode = this.currentNode\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false\n    }\n    this.currentNode = currentNode\n    this.currentNode.isCurrent = true\n  }\n\n  setUserCurrentNode(node: Node, shouldAutoExpandParent = true): void {\n    const key = node[this.key]\n    const currNode = this.nodesMap[key]\n    this.setCurrentNode(currNode)\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true)\n    }\n  }\n\n  setCurrentNodeKey(key: TreeKey, shouldAutoExpandParent = true): void {\n    if (key === null || key === undefined) {\n      this.currentNode && (this.currentNode.isCurrent = false)\n      this.currentNode = null\n      return\n    }\n    const node = this.getNode(key)\n    if (node) {\n      this.setCurrentNode(node)\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true)\n      }\n    }\n  }\n}\n","<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n","// @ts-nocheck\nimport { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n","// @ts-nocheck\nimport { provide, ref } from 'vue'\nimport { addClass, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { InjectionKey } from 'vue'\nimport type Node from './node'\nimport type { NodeDropType } from '../tree.type'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace('tree')\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (\n      typeof props.allowDrag === 'function' &&\n      !props.allowDrag(treeNode.node)\n    ) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (typeof props.allowDrop === 'function') {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n\n    const targetPosition = dropNode.$el.getBoundingClientRect()\n    const treePosition = el$.value.getBoundingClientRect()\n\n    let dropType: NodeDropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator.style.top = `${indicatorTop}px`\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropNode.$el, ns.is('drop-inner'))\n    } else {\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy)\n      }\n\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n","<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      const store = tree.store.value\n      store.setCurrentNode(props.node)\n      tree.ctx.emit(\n        'current-change',\n        store.currentNode ? store.currentNode.data : null,\n        store.currentNode\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n","// @ts-nocheck\nimport { onMounted, onUpdated, shallowRef, watch } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type TreeStore from './tree-store'\n\nimport type { Ref } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\ninterface UseKeydownOption {\n  el$: Ref<HTMLElement>\n}\nexport function useKeydown({ el$ }: UseKeydownOption, store: Ref<TreeStore>) {\n  const ns = useNamespace('tree')\n\n  const treeItems = shallowRef<Nullable<HTMLElement>[]>([])\n  const checkboxItems = shallowRef<Nullable<HTMLElement>[]>([])\n\n  onMounted(() => {\n    initTabIndex()\n  })\n\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll('[role=treeitem]'))\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n  })\n\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute('tabindex', '-1')\n    })\n  })\n\n  const handleKeydown = (ev: KeyboardEvent): void => {\n    const currentItem = ev.target as HTMLElement\n    if (!currentItem.className.includes(ns.b('node'))) return\n    const code = ev.code\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    const currentIndex = treeItems.value.indexOf(currentItem)\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      ev.preventDefault()\n      if (code === EVENT_CODE.up) {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex !== 0\n            ? currentIndex - 1\n            : treeItems.value.length - 1\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex--\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1\n          }\n        }\n      } else {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex < treeItems.value.length - 1\n            ? currentIndex + 1\n            : 0\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex++\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus()\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {\n      ev.preventDefault()\n      currentItem.click()\n    }\n    const hasInput = currentItem.querySelector(\n      '[type=\"checkbox\"]'\n    ) as Nullable<HTMLInputElement>\n    if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && hasInput) {\n      ev.preventDefault()\n      hasInput.click()\n    }\n  }\n\n  useEventListener(el$, 'keydown', handleKeydown)\n\n  const initTabIndex = (): void => {\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n    const checkedItem = el$.value.querySelectorAll(\n      `.${ns.is('checked')}[role=treeitem]`\n    )\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute('tabindex', '0')\n      return\n    }\n    treeItems.value[0]?.setAttribute('tabindex', '0')\n  }\n}\n","<template>\n  <div\n    ref=\"el$\"\n    :class=\"[\n      ns.b(),\n      ns.is('dragging', !!dragState.draggingNode),\n      ns.is('drop-not-allow', !dragState.allowDrop),\n      ns.is('drop-inner', dragState.dropType === 'inner'),\n      { [ns.m('highlight-current')]: highlightCurrent },\n    ]\"\n    role=\"tree\"\n  >\n    <el-tree-node\n      v-for=\"child in root.childNodes\"\n      :key=\"getNodeKey(child)\"\n      :node=\"child\"\n      :props=\"props\"\n      :accordion=\"accordion\"\n      :render-after-expand=\"renderAfterExpand\"\n      :show-checkbox=\"showCheckbox\"\n      :render-content=\"renderContent\"\n      @node-expand=\"handleNodeExpand\"\n    />\n    <div v-if=\"isEmpty\" :class=\"ns.e('empty-block')\">\n      <span :class=\"ns.e('empty-text')\">{{\n        emptyText ?? t('el.tree.emptyText')\n      }}</span>\n    </div>\n    <div\n      v-show=\"dragState.showDropIndicator\"\n      ref=\"dropIndicator$\"\n      :class=\"ns.e('drop-indicator')\"\n    />\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { formItemContextKey } from '@element-plus/tokens'\nimport TreeStore from './model/tree-store'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport ElTreeNode from './tree-node.vue'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { useDragNodeHandler } from './model/useDragNode'\nimport { useKeydown } from './model/useKeydown'\nimport type Node from './model/node'\n\nimport type { Component, ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  TreeComponentProps,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n} from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTree',\n  components: { ElTreeNode },\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    emptyText: {\n      type: String,\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true,\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true,\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false,\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true,\n    },\n    defaultCheckedKeys: Array as PropType<\n      TreeComponentProps['defaultCheckedKeys']\n    >,\n    defaultExpandedKeys: Array as PropType<\n      TreeComponentProps['defaultExpandedKeys']\n    >,\n    currentNodeKey: [String, Number] as PropType<string | number>,\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n    draggable: {\n      type: Boolean,\n      default: false,\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object as PropType<TreeComponentProps['props']>,\n      default: () => ({\n        children: 'children',\n        label: 'label',\n        disabled: 'disabled',\n      }),\n    },\n    lazy: {\n      type: Boolean,\n      default: false,\n    },\n    highlightCurrent: Boolean,\n    load: Function as PropType<TreeComponentProps['load']>,\n    filterNodeMethod: Function as PropType<\n      TreeComponentProps['filterNodeMethod']\n    >,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18,\n    },\n    icon: [String, Object] as PropType<string | Component>,\n  },\n  emits: [\n    'check-change',\n    'current-change',\n    'node-click',\n    'node-contextmenu',\n    'node-collapse',\n    'node-expand',\n    'check',\n    'node-drag-start',\n    'node-drag-end',\n    'node-drop',\n    'node-drag-leave',\n    'node-drag-enter',\n    'node-drag-over',\n  ],\n  setup(props, ctx) {\n    const { t } = useLocale()\n    const ns = useNamespace('tree')\n\n    const store = ref<TreeStore>(\n      new TreeStore({\n        key: props.nodeKey,\n        data: props.data,\n        lazy: props.lazy,\n        props: props.props,\n        load: props.load,\n        currentNodeKey: props.currentNodeKey,\n        checkStrictly: props.checkStrictly,\n        checkDescendants: props.checkDescendants,\n        defaultCheckedKeys: props.defaultCheckedKeys,\n        defaultExpandedKeys: props.defaultExpandedKeys,\n        autoExpandParent: props.autoExpandParent,\n        defaultExpandAll: props.defaultExpandAll,\n        filterNodeMethod: props.filterNodeMethod,\n      })\n    )\n\n    store.value.initialize()\n\n    const root = ref<Node>(store.value.root)\n    const currentNode = ref<Node>(null)\n    const el$ = ref<Nullable<HTMLElement>>(null)\n    const dropIndicator$ = ref<Nullable<HTMLElement>>(null)\n\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store,\n    })\n\n    useKeydown({ el$ }, store)\n\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value\n      return (\n        !childNodes ||\n        childNodes.length === 0 ||\n        childNodes.every(({ visible }) => !visible)\n      )\n    })\n\n    watch(\n      () => props.defaultCheckedKeys,\n      (newVal) => {\n        store.value.setDefaultCheckedKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultExpandedKeys,\n      (newVal) => {\n        store.value.setDefaultExpandedKeys(newVal)\n      }\n    )\n\n    watch(\n      () => props.data,\n      (newVal) => {\n        store.value.setData(newVal)\n      },\n      { deep: true }\n    )\n\n    watch(\n      () => props.checkStrictly,\n      (newVal) => {\n        store.value.checkStrictly = newVal\n      }\n    )\n\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error('[Tree] filterNodeMethod is required when filter')\n      store.value.filter(value)\n    }\n\n    const getNodeKey = (node: Node) => {\n      return getNodeKeyUtil(props.nodeKey, node.data)\n    }\n\n    const getNodePath = (data: TreeKey | TreeNodeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getNodePath')\n      const node = store.value.getNode(data)\n      if (!node) return []\n      const path = [node.data]\n      let parent = node.parent\n      while (parent && parent !== root.value) {\n        path.push(parent.data)\n        parent = parent.parent\n      }\n      return path.reverse()\n    }\n\n    const getCheckedNodes = (\n      leafOnly?: boolean,\n      includeHalfChecked?: boolean\n    ): TreeNodeData[] => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked)\n    }\n\n    const getCheckedKeys = (leafOnly?: boolean): TreeKey[] => {\n      return store.value.getCheckedKeys(leafOnly)\n    }\n\n    const getCurrentNode = (): TreeNodeData => {\n      const currentNode = store.value.getCurrentNode()\n      return currentNode ? currentNode.data : null\n    }\n\n    const getCurrentKey = (): any => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getCurrentKey')\n      const currentNode = getCurrentNode()\n      return currentNode ? currentNode[props.nodeKey] : null\n    }\n\n    const setCheckedNodes = (nodes: Node[], leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedNodes')\n      store.value.setCheckedNodes(nodes, leafOnly)\n    }\n\n    const setCheckedKeys = (keys, leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedKeys')\n      store.value.setCheckedKeys(keys, leafOnly)\n    }\n\n    const setChecked = (\n      data: TreeKey | TreeNodeData,\n      checked: boolean,\n      deep: boolean\n    ) => {\n      store.value.setChecked(data, checked, deep)\n    }\n\n    const getHalfCheckedNodes = (): TreeNodeData[] => {\n      return store.value.getHalfCheckedNodes()\n    }\n\n    const getHalfCheckedKeys = (): TreeKey[] => {\n      return store.value.getHalfCheckedKeys()\n    }\n\n    const setCurrentNode = (node: Node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentNode')\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent)\n    }\n\n    const setCurrentKey = (key: TreeKey, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentKey')\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent)\n    }\n\n    const getNode = (data: TreeKey | TreeNodeData): Node => {\n      return store.value.getNode(data)\n    }\n\n    const remove = (data: TreeNodeData | Node) => {\n      store.value.remove(data)\n    }\n\n    const append = (\n      data: TreeNodeData,\n      parentNode: TreeNodeData | TreeKey | Node\n    ) => {\n      store.value.append(data, parentNode)\n    }\n\n    const insertBefore = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertBefore(data, refNode)\n    }\n\n    const insertAfter = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertAfter(data, refNode)\n    }\n\n    const handleNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const updateKeyChildren = (key: TreeKey, data: TreeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in updateKeyChild')\n      store.value.updateChildren(key, data)\n    }\n\n    provide('RootTree', {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance(),\n    } as any)\n\n    provide(formItemContextKey, undefined)\n\n    return {\n      ns,\n      // ref\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n\n      // computed\n      isEmpty,\n\n      // methods\n      filter,\n      getNodeKey,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren,\n    }\n  },\n})\n</script>\n","import Tree from './src/tree.vue'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nTree.install = (app: App): void => {\n  app.component(Tree.name, Tree)\n}\n\nconst _Tree = Tree as SFCWithInstall<typeof Tree>\n\nexport default _Tree\nexport const ElTree = _Tree\n","import { nextTick } from 'vue'\nimport { obtainAllFocusableElements } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport type { ObjectDirective } from 'vue'\n\nexport const FOCUSABLE_CHILDREN = '_trap-focus-children'\nexport const TRAP_FOCUS_HANDLER = '_trap-focus-handler'\n\nexport interface TrapFocusElement extends HTMLElement {\n  [FOCUSABLE_CHILDREN]: HTMLElement[]\n  [TRAP_FOCUS_HANDLER]: (e: KeyboardEvent) => void\n}\n\nconst FOCUS_STACK: TrapFocusElement[] = []\n\nconst FOCUS_HANDLER = (e: KeyboardEvent) => {\n  // Getting the top layer.\n  if (FOCUS_STACK.length === 0) return\n  const focusableElement =\n    FOCUS_STACK[FOCUS_STACK.length - 1][FOCUSABLE_CHILDREN]\n  if (focusableElement.length > 0 && e.code === EVENT_CODE.tab) {\n    if (focusableElement.length === 1) {\n      e.preventDefault()\n      if (document.activeElement !== focusableElement[0]) {\n        focusableElement[0].focus()\n      }\n      return\n    }\n    const goingBackward = e.shiftKey\n    const isFirst = e.target === focusableElement[0]\n    const isLast = e.target === focusableElement[focusableElement.length - 1]\n    if (isFirst && goingBackward) {\n      e.preventDefault()\n      focusableElement[focusableElement.length - 1].focus()\n    }\n    if (isLast && !goingBackward) {\n      e.preventDefault()\n      focusableElement[0].focus()\n    }\n\n    // the is critical since jsdom did not implement user actions, you can only mock it\n    // DELETE ME: when testing env switches to puppeteer\n    if (process.env.NODE_ENV === 'test') {\n      const index = focusableElement.indexOf(e.target as HTMLElement)\n      if (index !== -1) {\n        focusableElement[goingBackward ? index - 1 : index + 1]?.focus()\n      }\n    }\n  }\n}\n\nconst TrapFocus: ObjectDirective = {\n  beforeMount(el: TrapFocusElement) {\n    el[FOCUSABLE_CHILDREN] = obtainAllFocusableElements(el)\n    FOCUS_STACK.push(el)\n    if (FOCUS_STACK.length <= 1) {\n      document.addEventListener('keydown', FOCUS_HANDLER)\n    }\n  },\n  updated(el: TrapFocusElement) {\n    nextTick(() => {\n      el[FOCUSABLE_CHILDREN] = obtainAllFocusableElements(el)\n    })\n  },\n  unmounted() {\n    FOCUS_STACK.shift()\n    if (FOCUS_STACK.length === 0) {\n      document.removeEventListener('keydown', FOCUS_HANDLER)\n    }\n  },\n}\n\nexport default TrapFocus\n","import { componentSizes, datePickTypes } from '@element-plus/constants'\nimport type { ComponentSize, DatePickType } from '@element-plus/constants'\n\nexport const isValidComponentSize = (val: string): val is ComponentSize | '' =>\n  ['', ...componentSizes].includes(val)\n\nexport const isValidDatePickType = (val: string): val is DatePickType =>\n  ([...datePickTypes] as string[]).includes(val)\n","import { isRef, watch } from 'vue'\nimport type { Ref } from 'vue'\n\n/**\n * This method provides dialogable components the ability to restore previously activated element before\n * the dialog gets opened\n */\nexport const useRestoreActive = (\n  toggle: Ref<boolean>,\n  initialFocus?: Ref<HTMLElement>\n) => {\n  let previousActive: HTMLElement\n  watch(\n    () => toggle.value,\n    (val) => {\n      if (val) {\n        previousActive = document.activeElement as HTMLElement\n        if (isRef(initialFocus)) {\n          initialFocus.value.focus?.()\n        }\n      } else {\n        if (process.env.NODE_ENV === 'test') {\n          previousActive.focus.call(previousActive)\n        } else {\n          previousActive.focus()\n        }\n      }\n    }\n  )\n}\n","<template>\n  <transition name=\"fade-in-linear\" @after-leave=\"$emit('vanish')\">\n    <el-overlay\n      v-show=\"visible\"\n      :z-index=\"zIndex\"\n      :overlay-class=\"[ns.is('message-box'), modalClass]\"\n      :mask=\"modal\"\n    >\n      <div\n        role=\"dialog\"\n        :aria-label=\"title\"\n        aria-modal=\"true\"\n        :aria-describedby=\"!showInput ? contentId : undefined\"\n        :class=\"`${ns.namespace.value}-overlay-message-box`\"\n        @click=\"overlayEvent.onClick\"\n        @mousedown=\"overlayEvent.onMousedown\"\n        @mouseup=\"overlayEvent.onMouseup\"\n      >\n        <el-focus-trap\n          loop\n          :trapped=\"visible\"\n          :focus-trap-el=\"rootRef\"\n          :focus-start-el=\"focusStartRef\"\n          @release-requested=\"onCloseRequested\"\n        >\n          <div\n            ref=\"rootRef\"\n            :class=\"[\n              ns.b(),\n              customClass,\n              ns.is('draggable', draggable),\n              { [ns.m('center')]: center },\n            ]\"\n            :style=\"customStyle\"\n            tabindex=\"-1\"\n            @click.stop=\"\"\n          >\n            <div\n              v-if=\"title !== null && title !== undefined\"\n              ref=\"headerRef\"\n              :class=\"ns.e('header')\"\n            >\n              <div :class=\"ns.e('title')\">\n                <el-icon\n                  v-if=\"iconComponent && center\"\n                  :class=\"[ns.e('status'), typeClass]\"\n                >\n                  <component :is=\"iconComponent\" />\n                </el-icon>\n                <span>{{ title }}</span>\n              </div>\n              <button\n                v-if=\"showClose\"\n                type=\"button\"\n                :class=\"ns.e('headerbtn')\"\n                :aria-label=\"t('el.messagebox.close')\"\n                @click=\"\n                  handleAction(distinguishCancelAndClose ? 'close' : 'cancel')\n                \"\n                @keydown.prevent.enter=\"\n                  handleAction(distinguishCancelAndClose ? 'close' : 'cancel')\n                \"\n              >\n                <el-icon :class=\"ns.e('close')\">\n                  <close />\n                </el-icon>\n              </button>\n            </div>\n            <div :id=\"contentId\" :class=\"ns.e('content')\">\n              <div :class=\"ns.e('container')\">\n                <el-icon\n                  v-if=\"iconComponent && !center && hasMessage\"\n                  :class=\"[ns.e('status'), typeClass]\"\n                >\n                  <component :is=\"iconComponent\" />\n                </el-icon>\n                <div v-if=\"hasMessage\" :class=\"ns.e('message')\">\n                  <slot>\n                    <component\n                      :is=\"showInput ? 'label' : 'p'\"\n                      v-if=\"!dangerouslyUseHTMLString\"\n                      :for=\"showInput ? inputId : undefined\"\n                    >\n                      {{ !dangerouslyUseHTMLString ? message : '' }}\n                    </component>\n                    <component\n                      :is=\"showInput ? 'label' : 'p'\"\n                      v-else\n                      :for=\"showInput ? inputId : undefined\"\n                      v-html=\"message\"\n                    />\n                  </slot>\n                </div>\n              </div>\n              <div v-show=\"showInput\" :class=\"ns.e('input')\">\n                <el-input\n                  :id=\"inputId\"\n                  ref=\"inputRef\"\n                  v-model=\"inputValue\"\n                  :type=\"inputType\"\n                  :placeholder=\"inputPlaceholder\"\n                  :aria-invalid=\"validateError\"\n                  :class=\"{ invalid: validateError }\"\n                  @keydown.enter=\"handleInputEnter\"\n                />\n                <div\n                  :class=\"ns.e('errormsg')\"\n                  :style=\"{\n                    visibility: !!editorErrorMessage ? 'visible' : 'hidden',\n                  }\"\n                >\n                  {{ editorErrorMessage }}\n                </div>\n              </div>\n            </div>\n            <div :class=\"ns.e('btns')\">\n              <el-button\n                v-if=\"showCancelButton\"\n                :loading=\"cancelButtonLoading\"\n                :class=\"[cancelButtonClass]\"\n                :round=\"roundButton\"\n                :size=\"btnSize\"\n                @click=\"handleAction('cancel')\"\n                @keydown.prevent.enter=\"handleAction('cancel')\"\n              >\n                {{ cancelButtonText || t('el.messagebox.cancel') }}\n              </el-button>\n              <el-button\n                v-show=\"showConfirmButton\"\n                ref=\"confirmRef\"\n                type=\"primary\"\n                :loading=\"confirmButtonLoading\"\n                :class=\"[confirmButtonClasses]\"\n                :round=\"roundButton\"\n                :disabled=\"confirmButtonDisabled\"\n                :size=\"btnSize\"\n                @click=\"handleAction('confirm')\"\n                @keydown.prevent.enter=\"handleAction('confirm')\"\n              >\n                {{ confirmButtonText || t('el.messagebox.confirm') }}\n              </el-button>\n            </div>\n          </div>\n        </el-focus-trap>\n      </div>\n    </el-overlay>\n  </transition>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport { TrapFocus } from '@element-plus/directives'\nimport {\n  useDraggable,\n  useId,\n  useLocale,\n  useLockscreen,\n  useNamespace,\n  useRestoreActive,\n  useSameTarget,\n  useSize,\n  useZIndex,\n} from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport {\n  TypeComponents,\n  TypeComponentsMap,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport { ElIcon } from '@element-plus/components/icon'\nimport ElFocusTrap from '@element-plus/components/focus-trap'\n\nimport type { ComponentPublicInstance, PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type {\n  Action,\n  MessageBoxState,\n  MessageBoxType,\n} from './message-box.type'\n\nexport default defineComponent({\n  name: 'ElMessageBox',\n  directives: {\n    TrapFocus,\n  },\n  components: {\n    ElButton,\n    ElFocusTrap,\n    ElInput,\n    ElOverlay,\n    ElIcon,\n    ...TypeComponents,\n  },\n  inheritAttrs: false,\n  props: {\n    buttonSize: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    modal: {\n      type: Boolean,\n      default: true,\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true,\n    },\n    showClose: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnClickModal: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnPressEscape: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnHashChange: {\n      type: Boolean,\n      default: true,\n    },\n    center: Boolean,\n    draggable: Boolean,\n    roundButton: {\n      default: false,\n      type: Boolean,\n    },\n    container: {\n      type: String, // default append to body\n      default: 'body',\n    },\n    boxType: {\n      type: String as PropType<MessageBoxType>,\n      default: '',\n    },\n  },\n  emits: ['vanish', 'action'],\n  setup(props, { emit }) {\n    // const popup = usePopup(props, doClose)\n    const { t } = useLocale()\n    const ns = useNamespace('message-box')\n    const visible = ref(false)\n    const { nextZIndex } = useZIndex()\n    // s represents state\n    const state = reactive<MessageBoxState>({\n      // autofocus element when open message-box\n      autofocus: true,\n      beforeClose: null,\n      callback: null,\n      cancelButtonText: '',\n      cancelButtonClass: '',\n      confirmButtonText: '',\n      confirmButtonClass: '',\n      customClass: '',\n      customStyle: {},\n      dangerouslyUseHTMLString: false,\n      distinguishCancelAndClose: false,\n      icon: '',\n      inputPattern: null,\n      inputPlaceholder: '',\n      inputType: 'text',\n      inputValue: null,\n      inputValidator: null,\n      inputErrorMessage: '',\n      message: null,\n      modalFade: true,\n      modalClass: '',\n      showCancelButton: false,\n      showConfirmButton: true,\n      type: '',\n      title: undefined,\n      showInput: false,\n      action: '' as Action,\n      confirmButtonLoading: false,\n      cancelButtonLoading: false,\n      confirmButtonDisabled: false,\n      editorErrorMessage: '',\n      // refer to: https://github.com/ElemeFE/element/commit/2999279ae34ef10c373ca795c87b020ed6753eed\n      // seemed ok for now without this state.\n      // isOnComposition: false, // temporary remove\n      validateError: false,\n      zIndex: nextZIndex(),\n    })\n\n    const typeClass = computed(() => {\n      const type = state.type\n      return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n    })\n\n    const contentId = useId()\n    const inputId = useId()\n\n    const btnSize = useSize(\n      computed(() => props.buttonSize),\n      { prop: true, form: true, formItem: true }\n    )\n\n    const iconComponent = computed(\n      () => state.icon || TypeComponentsMap[state.type] || ''\n    )\n    const hasMessage = computed(() => !!state.message)\n    const rootRef = ref<HTMLElement>()\n    const headerRef = ref<HTMLElement>()\n    const focusStartRef = ref<HTMLElement>()\n    const inputRef = ref<ComponentPublicInstance>()\n    const confirmRef = ref<ComponentPublicInstance>()\n\n    const confirmButtonClasses = computed(() => state.confirmButtonClass)\n\n    watch(\n      () => state.inputValue,\n      async (val) => {\n        await nextTick()\n        if (props.boxType === 'prompt' && val !== null) {\n          validate()\n        }\n      },\n      { immediate: true }\n    )\n\n    watch(\n      () => visible.value,\n      (val) => {\n        if (val) {\n          if (props.boxType !== 'prompt') {\n            if (state.autofocus) {\n              focusStartRef.value = confirmRef.value?.$el ?? rootRef.value\n            } else {\n              focusStartRef.value = rootRef.value\n            }\n          }\n          state.zIndex = nextZIndex()\n        }\n        if (props.boxType !== 'prompt') return\n        if (val) {\n          nextTick().then(() => {\n            if (inputRef.value && inputRef.value.$el) {\n              if (state.autofocus) {\n                focusStartRef.value = getInputElement() ?? rootRef.value\n              } else {\n                focusStartRef.value = rootRef.value\n              }\n            }\n          })\n        } else {\n          state.editorErrorMessage = ''\n          state.validateError = false\n        }\n      }\n    )\n\n    const draggable = computed(() => props.draggable)\n    useDraggable(rootRef, headerRef, draggable)\n\n    onMounted(async () => {\n      await nextTick()\n      if (props.closeOnHashChange) {\n        window.addEventListener('hashchange', doClose)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      if (props.closeOnHashChange) {\n        window.removeEventListener('hashchange', doClose)\n      }\n    })\n\n    function doClose() {\n      if (!visible.value) return\n      visible.value = false\n      nextTick(() => {\n        if (state.action) emit('action', state.action)\n      })\n    }\n\n    const handleWrapperClick = () => {\n      if (props.closeOnClickModal) {\n        handleAction(state.distinguishCancelAndClose ? 'close' : 'cancel')\n      }\n    }\n\n    const overlayEvent = useSameTarget(handleWrapperClick)\n\n    const handleInputEnter = (e: KeyboardEvent) => {\n      if (state.inputType !== 'textarea') {\n        e.preventDefault()\n        return handleAction('confirm')\n      }\n    }\n\n    const handleAction = (action: Action) => {\n      if (props.boxType === 'prompt' && action === 'confirm' && !validate()) {\n        return\n      }\n\n      state.action = action\n\n      if (state.beforeClose) {\n        state.beforeClose?.(action, state, doClose)\n      } else {\n        doClose()\n      }\n    }\n\n    const validate = () => {\n      if (props.boxType === 'prompt') {\n        const inputPattern = state.inputPattern\n        if (inputPattern && !inputPattern.test(state.inputValue || '')) {\n          state.editorErrorMessage =\n            state.inputErrorMessage || t('el.messagebox.error')\n          state.validateError = true\n          return false\n        }\n        const inputValidator = state.inputValidator\n        if (typeof inputValidator === 'function') {\n          const validateResult = inputValidator(state.inputValue)\n          if (validateResult === false) {\n            state.editorErrorMessage =\n              state.inputErrorMessage || t('el.messagebox.error')\n            state.validateError = true\n            return false\n          }\n          if (typeof validateResult === 'string') {\n            state.editorErrorMessage = validateResult\n            state.validateError = true\n            return false\n          }\n        }\n      }\n      state.editorErrorMessage = ''\n      state.validateError = false\n      return true\n    }\n\n    const getInputElement = () => {\n      const inputRefs = inputRef.value.$refs\n      return (inputRefs.input || inputRefs.textarea) as HTMLElement\n    }\n\n    const handleClose = () => {\n      handleAction('close')\n    }\n\n    // when close on press escape is disabled, pressing esc should not callout\n    // any other message box and close any other dialog-ish elements\n    // e.g. Dialog has a close on press esc feature, and when it closes, it calls\n    // props.beforeClose method to make a intermediate state by callout a message box\n    // for some verification or alerting. then if we allow global event liek this\n    // to dispatch, it could callout another message box.\n    const onCloseRequested = () => {\n      if (props.closeOnPressEscape) {\n        handleClose()\n      }\n    }\n\n    // locks the screen to prevent scroll\n    if (props.lockScroll) {\n      useLockscreen(visible)\n    }\n\n    // restore to prev active element.\n    useRestoreActive(visible)\n\n    return {\n      ...toRefs(state),\n      ns,\n      overlayEvent,\n      visible,\n      hasMessage,\n      typeClass,\n      contentId,\n      inputId,\n      btnSize,\n      iconComponent,\n      confirmButtonClasses,\n      rootRef,\n      focusStartRef,\n      headerRef,\n      inputRef,\n      confirmRef,\n      doClose, // for outside usage\n      handleClose, // for out side usage\n      onCloseRequested,\n      handleWrapperClick,\n      handleInputEnter,\n      handleAction,\n      t,\n    }\n  },\n})\n</script>\n","// @ts-nocheck\nimport { h, render, watch } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport {\n  hasOwn,\n  isObject,\n  isString,\n  isUndefined,\n  isVNode,\n} from '@element-plus/utils'\nimport MessageBoxConstructor from './index.vue'\n\nimport type { AppContext, ComponentPublicInstance, VNode } from 'vue'\nimport type {\n  Action,\n  Callback,\n  ElMessageBoxOptions,\n  IElMessageBox,\n  MessageBoxData,\n  MessageBoxState,\n} from './message-box.type'\n\n// component default merge props & data\n\nconst messageInstance = new Map<\n  ComponentPublicInstance<{ doClose: () => void }>, // marking doClose as function\n  {\n    options: any\n    callback: Callback\n    resolve: (res: any) => void\n    reject: (reason?: any) => void\n  }\n>()\n\nconst initInstance = (\n  props: any,\n  container: HTMLElement,\n  appContext: AppContext | null = null\n) => {\n  const vnode = h(MessageBoxConstructor, props)\n  vnode.appContext = appContext\n  render(vnode, container)\n  document.body.appendChild(container.firstElementChild!)\n  return vnode.component\n}\n\nconst genContainer = () => {\n  return document.createElement('div')\n}\n\nconst showMessage = (options: any, appContext?: AppContext | null) => {\n  const container = genContainer()\n  // Adding destruct method.\n  // when transition leaves emitting `vanish` evt. so that we can do the clean job.\n  options.onVanish = () => {\n    // not sure if this causes mem leak, need proof to verify that.\n    // maybe calling out like 1000 msg-box then close them all.\n    render(null, container)\n    messageInstance.delete(vm) // Remove vm to avoid mem leak.\n    // here we were suppose to call document.body.removeChild(container.firstElementChild)\n    // but render(null, container) did that job for us. so that we do not call that directly\n  }\n\n  options.onAction = (action: Action) => {\n    const currentMsg = messageInstance.get(vm)!\n    let resolve: Action | { value: string; action: Action }\n    if (options.showInput) {\n      resolve = { value: vm.inputValue, action }\n    } else {\n      resolve = action\n    }\n    if (options.callback) {\n      options.callback(resolve, instance.proxy)\n    } else {\n      if (action === 'cancel' || action === 'close') {\n        if (options.distinguishCancelAndClose && action !== 'cancel') {\n          currentMsg.reject('close')\n        } else {\n          currentMsg.reject('cancel')\n        }\n      } else {\n        currentMsg.resolve(resolve)\n      }\n    }\n  }\n\n  const instance = initInstance(options, container, appContext)!\n\n  // This is how we use message box programmably.\n  // Maybe consider releasing a template version?\n  // get component instance like v2.\n  const vm = instance.proxy as ComponentPublicInstance<\n    {\n      visible: boolean\n      doClose: () => void\n    } & MessageBoxState\n  >\n\n  for (const prop in options) {\n    if (hasOwn(options, prop) && !hasOwn(vm.$props, prop)) {\n      vm[prop as string] = options[prop]\n    }\n  }\n\n  watch(\n    () => vm.message,\n    (newVal, oldVal) => {\n      if (isVNode(newVal)) {\n        // Override slots since message is vnode type.\n        instance.slots.default = () => [newVal]\n      } else if (isVNode(oldVal) && !isVNode(newVal)) {\n        delete instance.slots.default\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  // change visibility after everything is settled\n  vm.visible = true\n  return vm\n}\n\nasync function MessageBox(\n  options: ElMessageBoxOptions,\n  appContext?: AppContext | null\n): Promise<MessageBoxData>\nfunction MessageBox(\n  options: ElMessageBoxOptions | string | VNode,\n  appContext: AppContext | null = null\n): Promise<{ value: string; action: Action } | Action> {\n  if (!isClient) return Promise.reject()\n  let callback\n  if (isString(options) || isVNode(options)) {\n    options = {\n      message: options,\n    }\n  } else {\n    callback = options.callback\n  }\n\n  return new Promise((resolve, reject) => {\n    const vm = showMessage(options, appContext ?? MessageBox._context)\n    // collect this vm in order to handle upcoming events.\n    messageInstance.set(vm, {\n      options,\n      callback,\n      resolve,\n      reject,\n    })\n  })\n}\n\nconst MESSAGE_BOX_VARIANTS = ['alert', 'confirm', 'prompt'] as const\nconst MESSAGE_BOX_DEFAULT_OPTS: Record<\n  typeof MESSAGE_BOX_VARIANTS[number],\n  Partial<ElMessageBoxOptions>\n> = {\n  alert: { closeOnPressEscape: false, closeOnClickModal: false },\n  confirm: { showCancelButton: true },\n  prompt: { showCancelButton: true, showInput: true },\n}\n\nMESSAGE_BOX_VARIANTS.forEach((boxType) => {\n  MessageBox[boxType] = messageBoxFactory(boxType)\n})\n\nfunction messageBoxFactory(boxType: typeof MESSAGE_BOX_VARIANTS[number]) {\n  return (\n    message: string,\n    titleOrOpts: string | ElMessageBoxOptions,\n    options?: ElMessageBoxOptions,\n    appContext?: AppContext | null\n  ) => {\n    let title: string\n    if (isObject(titleOrOpts)) {\n      options = titleOrOpts\n      title = ''\n    } else if (isUndefined(titleOrOpts)) {\n      title = ''\n    } else {\n      title = titleOrOpts\n    }\n\n    return MessageBox(\n      Object.assign(\n        {\n          title,\n          message,\n          type: '',\n          ...MESSAGE_BOX_DEFAULT_OPTS[boxType],\n        },\n        options,\n        {\n          boxType,\n        }\n      ),\n      appContext\n    )\n  }\n}\n\nMessageBox.close = () => {\n  // instance.setupInstall.doClose()\n  // instance.setupInstall.state.visible = false\n\n  messageInstance.forEach((_, vm) => {\n    vm.doClose()\n  })\n\n  messageInstance.clear()\n}\n\nMessageBox._context = null\n\nexport default MessageBox as IElMessageBox\n","import MessageBox from './src/messageBox'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nconst _MessageBox = MessageBox as SFCWithInstall<typeof MessageBox>\n\n_MessageBox.install = (app: App) => {\n  _MessageBox._context = app._context\n  app.config.globalProperties.$msgbox = _MessageBox\n  app.config.globalProperties.$messageBox = _MessageBox\n  app.config.globalProperties.$alert = _MessageBox.alert\n  app.config.globalProperties.$confirm = _MessageBox.confirm\n  app.config.globalProperties.$prompt = _MessageBox.prompt\n}\n\nexport default _MessageBox\nexport const ElMessageBox = _MessageBox\n\nexport * from './src/message-box.type'\n","import { defineComponent, renderSlot, watch } from 'vue'\nimport { buildProps, definePropType } from '@element-plus/utils'\nimport { provideGlobalConfig, useSizeProp } from '@element-plus/hooks'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { ExperimentalFeatures } from '@element-plus/tokens'\nimport type { Language } from '@element-plus/locale'\nimport type { ButtonConfigContext } from '@element-plus/components/button'\nimport type { MessageConfigContext } from '@element-plus/components/message'\n\nexport const messageConfig: MessageConfigContext = {}\n\nexport const configProviderProps = buildProps({\n  // Controlling if the users want a11y features.\n  a11y: {\n    type: Boolean,\n    default: true,\n  },\n\n  locale: {\n    type: definePropType<Language>(Object),\n  },\n\n  size: useSizeProp,\n\n  button: {\n    type: definePropType<ButtonConfigContext>(Object),\n  },\n\n  experimentalFeatures: {\n    type: definePropType<ExperimentalFeatures>(Object),\n  },\n\n  // Controls if we should handle keyboard navigation\n  keyboardNavigation: {\n    type: Boolean,\n    default: true,\n  },\n\n  message: {\n    type: definePropType<MessageConfigContext>(Object),\n  },\n\n  zIndex: Number,\n\n  namespace: {\n    type: String,\n    default: 'el',\n  },\n} as const)\nexport type ConfigProviderProps = ExtractPropTypes<typeof configProviderProps>\n\nconst ConfigProvider = defineComponent({\n  name: 'ElConfigProvider',\n  props: configProviderProps,\n\n  setup(props, { slots }) {\n    watch(\n      () => props.message,\n      (val) => {\n        Object.assign(messageConfig, val ?? {})\n      },\n      { immediate: true, deep: true }\n    )\n    const config = provideGlobalConfig(props)\n    return () => renderSlot(slots, 'default', { config: config?.value })\n  },\n})\nexport type ConfigProviderInstance = InstanceType<typeof ConfigProvider>\n\nexport default ConfigProvider\n","import { buildProps } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type Badge from './badge.vue'\n\nexport const badgeProps = buildProps({\n  value: {\n    type: [String, Number],\n    default: '',\n  },\n  max: {\n    type: Number,\n    default: 99,\n  },\n  isDot: Boolean,\n  hidden: Boolean,\n  type: {\n    type: String,\n    values: ['primary', 'success', 'warning', 'info', 'danger'],\n    default: 'danger',\n  },\n} as const)\nexport type BadgeProps = ExtractPropTypes<typeof badgeProps>\n\nexport type BadgeInstance = InstanceType<typeof Badge>\n","<template>\n  <div :class=\"ns.b()\">\n    <slot />\n    <transition :name=\"`${ns.namespace.value}-zoom-in-center`\">\n      <sup\n        v-show=\"!hidden && (content || isDot)\"\n        :class=\"[\n          ns.e('content'),\n          ns.em('content', type),\n          ns.is('fixed', !!$slots.default),\n          ns.is('dot', isDot),\n        ]\"\n        v-text=\"content\"\n      />\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isNumber } from '@element-plus/utils'\nimport { badgeProps } from './badge'\n\ndefineOptions({\n  name: 'ElBadge',\n})\n\nconst props = defineProps(badgeProps)\n\nconst ns = useNamespace('badge')\n\nconst content = computed<string>(() => {\n  if (props.isDot) return ''\n\n  if (isNumber(props.value) && isNumber(props.max)) {\n    return props.max < props.value ? `${props.max}+` : `${props.value}`\n  }\n  return `${props.value}`\n})\n\ndefineExpose({\n  /** @description badge content */\n  content,\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\n\nimport Badge from './src/badge.vue'\n\nexport const ElBadge = withInstall(Badge)\nexport default ElBadge\n\nexport * from './src/badge'\n","import { isClient } from '@vueuse/core'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport type { AppContext, ExtractPropTypes, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type MessageConstructor from './message.vue'\n\nexport const messageTypes = ['success', 'info', 'warning', 'error'] as const\n\nexport type messageType = typeof messageTypes[number]\n\nexport interface MessageConfigContext {\n  max?: number\n}\n\nexport const messageDefaults = mutable({\n  customClass: '',\n  center: false,\n  dangerouslyUseHTMLString: false,\n  duration: 3000,\n  icon: '',\n  id: '',\n  message: '',\n  onClose: undefined,\n  showClose: false,\n  type: 'info',\n  offset: 16,\n  zIndex: 0,\n  grouping: false,\n  repeatNum: 1,\n  appendTo: isClient ? document.body : (undefined as never),\n} as const)\n\nexport const messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: messageDefaults.customClass,\n  },\n  center: {\n    type: Boolean,\n    default: messageDefaults.center,\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: messageDefaults.dangerouslyUseHTMLString,\n  },\n  duration: {\n    type: Number,\n    default: messageDefaults.duration,\n  },\n  icon: {\n    type: iconPropType,\n    default: messageDefaults.icon,\n  },\n  id: {\n    type: String,\n    default: messageDefaults.id,\n  },\n  message: {\n    type: definePropType<string | VNode | (() => VNode)>([\n      String,\n      Object,\n      Function,\n    ]),\n    default: messageDefaults.message,\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: false,\n  },\n  showClose: {\n    type: Boolean,\n    default: messageDefaults.showClose,\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: messageDefaults.type,\n  },\n  offset: {\n    type: Number,\n    default: messageDefaults.offset,\n  },\n  zIndex: {\n    type: Number,\n    default: messageDefaults.zIndex,\n  },\n  grouping: {\n    type: Boolean,\n    default: messageDefaults.grouping,\n  },\n  repeatNum: {\n    type: Number,\n    default: messageDefaults.repeatNum,\n  },\n} as const)\nexport type MessageProps = ExtractPropTypes<typeof messageProps>\n\nexport const messageEmits = {\n  destroy: () => true,\n}\nexport type MessageEmits = typeof messageEmits\n\nexport type MessageInstance = InstanceType<typeof MessageConstructor>\n\nexport type MessageOptions = Partial<\n  Mutable<\n    Omit<MessageProps, 'id'> & {\n      appendTo?: HTMLElement | string\n    }\n  >\n>\nexport type MessageParams = MessageOptions | MessageOptions['message']\nexport type MessageParamsNormalized = Omit<MessageProps, 'id'> & {\n  appendTo: HTMLElement\n}\nexport type MessageOptionsWithType = Omit<MessageOptions, 'type'>\nexport type MessageParamsWithType =\n  | MessageOptionsWithType\n  | MessageOptions['message']\n\nexport interface MessageHandler {\n  close: () => void\n}\n\nexport type MessageFn = {\n  (options?: MessageParams, appContext?: null | AppContext): MessageHandler\n  closeAll(type?: messageType): void\n}\nexport type MessageTypedFn = (\n  options?: MessageParamsWithType,\n  appContext?: null | AppContext\n) => MessageHandler\n\nexport interface Message extends MessageFn {\n  success: MessageTypedFn\n  warning: MessageTypedFn\n  info: MessageTypedFn\n  error: MessageTypedFn\n}\n","import { shallowReactive } from 'vue'\nimport type { ComponentInternalInstance, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type { MessageHandler, MessageProps } from './message'\n\nexport type MessageContext = {\n  id: string\n  vnode: VNode\n  handler: MessageHandler\n  vm: ComponentInternalInstance\n  props: Mutable<MessageProps>\n}\n\nexport const instances: MessageContext[] = shallowReactive([])\n\nexport const getInstance = (id: string) => {\n  const idx = instances.findIndex((instance) => instance.id === id)\n  const current = instances[idx]\n  let prev: MessageContext | undefined\n  if (idx > 0) {\n    prev = instances[idx - 1]\n  }\n  return { current, prev }\n}\n\nexport const getLastOffset = (id: string): number => {\n  const { prev } = getInstance(id)\n  if (!prev) return 0\n  return prev.vm.exposeProxy!.bottom\n}\n","<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      ref=\"messageRef\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      />\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\" />\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <Close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { messageEmits, messageProps } from './message'\nimport { getLastOffset } from './instance'\nimport type { BadgeProps } from '@element-plus/components/badge'\nimport type { CSSProperties } from 'vue'\n\nconst { Close } = TypeComponents\n\ndefineOptions({\n  name: 'ElMessage',\n})\n\nconst props = defineProps(messageProps)\ndefineEmits(messageEmits)\n\nconst ns = useNamespace('message')\n\nconst messageRef = ref<HTMLDivElement>()\nconst visible = ref(false)\nconst height = ref(0)\n\nlet stopTimer: (() => void) | undefined = undefined\n\nconst badgeType = computed<BadgeProps['type']>(() =>\n  props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n)\nconst typeClass = computed(() => {\n  const type = props.type\n  return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n})\nconst iconComponent = computed(\n  () => props.icon || TypeComponentsMap[props.type] || ''\n)\n\nconst lastOffset = computed(() => getLastOffset(props.id))\nconst offset = computed(() => props.offset + lastOffset.value)\nconst bottom = computed((): number => height.value + offset.value)\nconst customStyle = computed<CSSProperties>(() => ({\n  top: `${offset.value}px`,\n  zIndex: props.zIndex,\n}))\n\nfunction startTimer() {\n  if (props.duration === 0) return\n  ;({ stop: stopTimer } = useTimeoutFn(() => {\n    close()\n  }, props.duration))\n}\n\nfunction clearTimer() {\n  stopTimer?.()\n}\n\nfunction close() {\n  visible.value = false\n}\n\nfunction keydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.esc) {\n    // press esc to close the message\n    close()\n  }\n}\n\nonMounted(() => {\n  startTimer()\n  visible.value = true\n})\n\nwatch(\n  () => props.repeatNum,\n  () => {\n    clearTimer()\n    startTimer()\n  }\n)\n\nuseEventListener(document, 'keydown', keydown)\n\nuseResizeObserver(messageRef, () => {\n  height.value = messageRef.value!.getBoundingClientRect().height\n})\n\ndefineExpose({\n  visible,\n  bottom,\n  close,\n})\n</script>\n","import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport {\n  debugWarn,\n  isElement,\n  isFunction,\n  isNumber,\n  isString,\n  isVNode,\n} from '@element-plus/utils'\nimport { useZIndex } from '@element-plus/hooks'\nimport { messageConfig } from '@element-plus/components/config-provider/src/config-provider'\nimport MessageConstructor from './message.vue'\nimport { messageDefaults, messageTypes } from './message'\nimport { instances } from './instance'\n\nimport type { MessageContext } from './instance'\nimport type { AppContext } from 'vue'\nimport type {\n  Message,\n  MessageFn,\n  MessageHandler,\n  MessageOptions,\n  MessageParams,\n  MessageParamsNormalized,\n  messageType,\n} from './message'\n\nlet seed = 1\n\n// TODO: Since Notify.ts is basically the same like this file. So we could do some encapsulation against them to reduce code duplication.\n\nconst normalizeOptions = (params?: MessageParams) => {\n  const options: MessageOptions =\n    !params || isString(params) || isVNode(params) || isFunction(params)\n      ? { message: params }\n      : params\n\n  const normalized = {\n    ...messageDefaults,\n    ...options,\n  }\n\n  if (!normalized.appendTo) {\n    normalized.appendTo = document.body\n  } else if (isString(normalized.appendTo)) {\n    let appendTo = document.querySelector<HTMLElement>(normalized.appendTo)\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElMessage',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    normalized.appendTo = appendTo\n  }\n\n  return normalized as MessageParamsNormalized\n}\n\nconst closeMessage = (instance: MessageContext) => {\n  const idx = instances.indexOf(instance)\n  if (idx === -1) return\n\n  instances.splice(idx, 1)\n  const { handler } = instance\n  handler.close()\n}\n\nconst createMessage = (\n  { appendTo, ...options }: MessageParamsNormalized,\n  context?: AppContext | null\n): MessageContext => {\n  const { nextZIndex } = useZIndex()\n\n  const id = `message_${seed++}`\n  const userOnClose = options.onClose\n\n  const container = document.createElement('div')\n\n  const props = {\n    ...options,\n    zIndex: nextZIndex() + options.zIndex,\n    id,\n    onClose: () => {\n      userOnClose?.()\n      closeMessage(instance)\n    },\n\n    // clean message element preventing mem leak\n    onDestroy: () => {\n      // since the element is destroy, then the VNode should be collected by GC as well\n      // we do not want cause any mem leak because we have returned vm as a reference to users\n      // so that we manually set it to false.\n      render(null, container)\n    },\n  }\n  const vnode = createVNode(\n    MessageConstructor,\n    props,\n    isFunction(props.message) || isVNode(props.message)\n      ? { default: props.message }\n      : null\n  )\n  vnode.appContext = context || message._context\n\n  render(vnode, container)\n  // instances will remove this item when close function gets called. So we do not need to worry about it.\n  appendTo.appendChild(container.firstElementChild!)\n\n  const vm = vnode.component!\n\n  const handler: MessageHandler = {\n    // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n    // for out component, so that all closing steps will not be skipped.\n    close: () => {\n      vm.exposeProxy!.visible = false\n    },\n  }\n\n  const instance: MessageContext = {\n    id,\n    vnode,\n    vm,\n    handler,\n    props: (vnode.component as any).props,\n  }\n\n  return instance\n}\n\nconst message: MessageFn &\n  Partial<Message> & { _context: AppContext | null } = (\n  options = {},\n  context\n) => {\n  if (!isClient) return { close: () => undefined }\n\n  if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n    return { close: () => undefined }\n  }\n\n  const normalized = normalizeOptions(options)\n\n  if (normalized.grouping && instances.length) {\n    const instance = instances.find(\n      ({ vnode: vm }) => vm.props?.message === normalized.message\n    )\n    if (instance) {\n      instance.props.repeatNum += 1\n      instance.props.type = normalized.type\n      return instance.handler\n    }\n  }\n\n  const instance = createMessage(normalized, context)\n\n  instances.push(instance)\n  return instance.handler\n}\n\nmessageTypes.forEach((type) => {\n  message[type] = (options = {}, appContext) => {\n    const normalized = normalizeOptions(options)\n    return message({ ...normalized, type }, appContext)\n  }\n})\n\nexport function closeAll(type?: messageType): void {\n  for (const instance of instances) {\n    if (!type || type === instance.props.type) {\n      instance.handler.close()\n    }\n  }\n}\n\nmessage.closeAll = closeAll\nmessage._context = null\n\nexport default message as Message\n","import { withInstallFunction } from '@element-plus/utils'\n\nimport Message from './src/method'\n\nexport const ElMessage = withInstallFunction(Message, '$message')\nexport default ElMessage\n\nexport * from './src/message'\n","import { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, VNode } from 'vue'\n\nexport const notificationTypes = [\n  'success',\n  'info',\n  'warning',\n  'error',\n] as const\n\nexport const notificationProps = buildProps({\n  customClass: {\n    type: String,\n    default: '',\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 4500,\n  },\n  icon: {\n    type: definePropType<string | Comment>([String, Object]),\n    default: '',\n  },\n  id: {\n    type: String,\n    default: '',\n  },\n  message: {\n    type: definePropType<string | VNode>([String, Object]),\n    default: '',\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  onClick: {\n    type: definePropType<() => void>(Function),\n    default: () => undefined,\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: true,\n  },\n  position: {\n    type: String,\n    values: ['top-right', 'top-left', 'bottom-right', 'bottom-left'],\n    default: 'top-right',\n  },\n  showClose: {\n    type: Boolean,\n    default: true,\n  },\n  title: {\n    type: String,\n    default: '',\n  },\n  type: {\n    type: String,\n    values: [...notificationTypes, ''],\n    default: '',\n  },\n  zIndex: {\n    type: Number,\n    default: 0,\n  },\n} as const)\nexport type NotificationProps = ExtractPropTypes<typeof notificationProps>\n\nexport const notificationEmits = {\n  destroy: () => true,\n}\nexport type NotificationEmits = typeof notificationEmits\n\nexport type NotificationOptions = Omit<NotificationProps, 'id'> & {\n  appendTo?: HTMLElement | string\n}\nexport type NotificationOptionsTyped = Omit<NotificationOptions, 'type'>\n\nexport interface NotificationHandle {\n  close: () => void\n}\n\nexport type NotificationParams = Partial<NotificationOptions> | string | VNode\nexport type NotificationParamsTyped =\n  | Partial<NotificationOptionsTyped>\n  | string\n  | VNode\n\nexport type NotifyFn = ((\n  options?: NotificationParams\n) => NotificationHandle) & { closeAll: () => void }\n\nexport type NotifyTypedFn = (\n  options?: NotificationParamsTyped\n) => NotificationHandle\n\nexport interface Notify extends NotifyFn {\n  success: NotifyTypedFn\n  warning: NotifyTypedFn\n  error: NotifyTypedFn\n  info: NotifyTypedFn\n}\n\nexport interface NotificationQueueItem {\n  vm: VNode\n}\n\nexport type NotificationQueue = NotificationQueueItem[]\n","<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[ns.b(), customClass, horizontalClass]\"\n      :style=\"positionStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onClick\"\n    >\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <div :class=\"ns.e('group')\">\n        <h2 :class=\"ns.e('title')\" v-text=\"title\" />\n        <div\n          v-show=\"message\"\n          :class=\"ns.e('content')\"\n          :style=\"!!title ? undefined : { margin: 0 }\"\n        >\n          <slot>\n            <p v-if=\"!dangerouslyUseHTMLString\">{{ message }}</p>\n            <!-- Caution here, message could've been compromized, nerver use user's input as message -->\n            <!-- eslint-disable-next-line -->\n            <p v-else v-html=\"message\"></p>\n          </slot>\n        </div>\n        <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n          <close />\n        </el-icon>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, onMounted, ref } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { notificationEmits, notificationProps } from './notification'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElNotification',\n\n  components: {\n    ElIcon,\n    ...TypeComponents,\n  },\n\n  props: notificationProps,\n  emits: notificationEmits,\n\n  setup(props) {\n    const ns = useNamespace('notification')\n    const visible = ref(false)\n    let timer: (() => void) | undefined = undefined\n\n    const typeClass = computed(() => {\n      const type = props.type\n      return type && TypeComponentsMap[props.type] ? ns.m(type) : ''\n    })\n\n    const iconComponent = computed(() => {\n      return TypeComponentsMap[props.type] || props.icon || ''\n    })\n\n    const horizontalClass = computed(() =>\n      props.position.endsWith('right') ? 'right' : 'left'\n    )\n\n    const verticalProperty = computed(() =>\n      props.position.startsWith('top') ? 'top' : 'bottom'\n    )\n\n    const positionStyle = computed<CSSProperties>(() => {\n      return {\n        [verticalProperty.value]: `${props.offset}px`,\n        zIndex: props.zIndex,\n      }\n    })\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;({ stop: timer } = useTimeoutFn(() => {\n          if (visible.value) close()\n        }, props.duration))\n      }\n    }\n\n    function clearTimer() {\n      timer?.()\n    }\n\n    function close() {\n      visible.value = false\n    }\n\n    function onKeydown({ code }: KeyboardEvent) {\n      if (code === EVENT_CODE.delete || code === EVENT_CODE.backspace) {\n        clearTimer() // press delete/backspace clear timer\n      } else if (code === EVENT_CODE.esc) {\n        // press esc to close the notification\n        if (visible.value) {\n          close()\n        }\n      } else {\n        startTimer() // resume timer\n      }\n    }\n\n    // lifecycle\n    onMounted(() => {\n      startTimer()\n      visible.value = true\n    })\n\n    useEventListener(document, 'keydown', onKeydown)\n\n    return {\n      ns,\n      horizontalClass,\n      typeClass,\n      iconComponent,\n      positionStyle,\n      visible,\n\n      close,\n      clearTimer,\n      startTimer,\n    }\n  },\n})\n</script>\n","import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { useZIndex } from '@element-plus/hooks'\nimport { debugWarn, isElement, isString, isVNode } from '@element-plus/utils'\nimport NotificationConstructor from './notification.vue'\nimport { notificationTypes } from './notification'\n\nimport type { AppContext, ComponentPublicInstance, VNode } from 'vue'\nimport type {\n  NotificationOptions,\n  NotificationProps,\n  NotificationQueue,\n  Notify,\n  NotifyFn,\n} from './notification'\n\n// This should be a queue but considering there were `non-autoclosable` notifications.\nconst notifications: Record<\n  NotificationOptions['position'],\n  NotificationQueue\n> = {\n  'top-left': [],\n  'top-right': [],\n  'bottom-left': [],\n  'bottom-right': [],\n}\n\n// the gap size between each notification\nconst GAP_SIZE = 16\nlet seed = 1\n\nconst notify: NotifyFn & Partial<Notify> & { _context: AppContext | null } =\n  function (options = {}, context: AppContext | null = null) {\n    if (!isClient) return { close: () => undefined }\n\n    if (typeof options === 'string' || isVNode(options)) {\n      options = { message: options }\n    }\n\n    const position = options.position || 'top-right'\n\n    let verticalOffset = options.offset || 0\n    notifications[position].forEach(({ vm }) => {\n      verticalOffset += (vm.el?.offsetHeight || 0) + GAP_SIZE\n    })\n    verticalOffset += GAP_SIZE\n\n    const { nextZIndex } = useZIndex()\n\n    const id = `notification_${seed++}`\n    const userOnClose = options.onClose\n    const props: Partial<NotificationProps> = {\n      // default options end\n      zIndex: nextZIndex(),\n      offset: verticalOffset,\n      ...options,\n      id,\n      onClose: () => {\n        close(id, position, userOnClose)\n      },\n    }\n\n    let appendTo: HTMLElement | null = document.body\n    if (isElement(options.appendTo)) {\n      appendTo = options.appendTo\n    } else if (isString(options.appendTo)) {\n      appendTo = document.querySelector(options.appendTo)\n    }\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElNotification',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    const container = document.createElement('div')\n\n    const vm = createVNode(\n      NotificationConstructor,\n      props,\n      isVNode(props.message)\n        ? {\n            default: () => props.message,\n          }\n        : null\n    )\n    vm.appContext = context ?? notify._context\n\n    // clean notification element preventing mem leak\n    vm.props!.onDestroy = () => {\n      render(null, container)\n    }\n\n    // instances will remove this item when close function gets called. So we do not need to worry about it.\n    render(vm, container)\n    notifications[position].push({ vm })\n    appendTo.appendChild(container.firstElementChild!)\n\n    return {\n      // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n      // for out component, so that all closing steps will not be skipped.\n      close: () => {\n        ;(\n          vm.component!.proxy as ComponentPublicInstance<{ visible: boolean }>\n        ).visible = false\n      },\n    }\n  }\nnotificationTypes.forEach((type) => {\n  notify[type] = (options = {}) => {\n    if (typeof options === 'string' || isVNode(options)) {\n      options = {\n        message: options,\n      }\n    }\n    return notify({\n      ...options,\n      type,\n    })\n  }\n})\n\n/**\n * This function gets called when user click `x` button or press `esc` or the time reached its limitation.\n * Emitted by transition@before-leave event so that we can fetch the current notification.offsetHeight, if this was called\n * by @after-leave the DOM element will be removed from the page thus we can no longer fetch the offsetHeight.\n * @param {String} id notification id to be closed\n * @param {Position} position the positioning strategy\n * @param {Function} userOnClose the callback called when close passed by user\n */\nexport function close(\n  id: string,\n  position: NotificationOptions['position'],\n  userOnClose?: (vm: VNode) => void\n): void {\n  // maybe we can store the index when inserting the vm to notification list.\n  const orientedNotifications = notifications[position]\n  const idx = orientedNotifications.findIndex(\n    ({ vm }) => vm.component?.props.id === id\n  )\n  if (idx === -1) return\n  const { vm } = orientedNotifications[idx]\n  if (!vm) return\n  // calling user's on close function before notification gets removed from DOM.\n  userOnClose?.(vm)\n\n  // note that this is called @before-leave, that's why we were able to fetch this property.\n  const removedHeight = vm.el!.offsetHeight\n  const verticalPos = position.split('-')[0]\n  orientedNotifications.splice(idx, 1)\n  const len = orientedNotifications.length\n  if (len < 1) return\n  // starting from the removing item.\n  for (let i = idx; i < len; i++) {\n    // new position equals the current offsetTop minus removed height plus 16px(the gap size between each item)\n    const { el, component } = orientedNotifications[i].vm\n    const pos =\n      Number.parseInt(el!.style[verticalPos], 10) - removedHeight - GAP_SIZE\n    component!.props.offset = pos\n  }\n}\n\nexport function closeAll(): void {\n  // loop through all directions, close them at once.\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({ vm }) => {\n      // same as the previous close method, we'd like to make sure lifecycle gets handle properly.\n      ;(\n        vm.component!.proxy as ComponentPublicInstance<{ visible: boolean }>\n      ).visible = false\n    })\n  }\n}\n\nnotify.closeAll = closeAll\nnotify._context = null\n\nexport default notify as Notify\n","import { withInstallFunction } from '@element-plus/utils'\n\nimport Notify from './src/notify'\n\nexport const ElNotification = withInstallFunction(Notify, '$notify')\nexport default ElNotification\n\nexport * from './src/notification'\n","import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent as _defineComponent } from 'vue';\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, isRef as _isRef, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4d0422a4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"New Role\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Edit\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Delete\");\n\nconst _hoisted_5 = {\n  style: {\n    \"text-align\": \"right\"\n  }\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Cancel\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Confirm\");\n\nimport { reactive, ref, computed, nextTick, getCurrentInstance, toRefs } from 'vue';\nimport { getRoutesApi, getRolesApi, addRoleApi, deleteRoleApi, updateRoleApi } from '@/request/api';\nimport { ElMessage, ElMessageBox, ElNotification } from 'element-plus';\nimport _ from 'lodash';\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'roleView',\n\n  setup(__props) {\n    let rolesList = ref([]);\n    let routes = ref([]);\n    let dialogVisible = ref(false);\n    let dialogType = ref('new');\n    let checkStrictly = ref(false);\n    const defaultProps = {\n      children: 'children',\n      label: 'title'\n    };\n    const defaultRole = {\n      key: '',\n      name: '',\n      description: '',\n      routes: []\n    };\n    let data = reactive({\n      role: {\n        key: '',\n        name: '',\n        description: '',\n        routes: []\n      }\n    });\n    let {\n      role\n    } = toRefs(data);\n    let routesData = computed(() => {\n      // 过滤掉onlyOneShowingChildFuc修改的空路由\n      return routes.value.filter(route => route.path);\n    });\n    let serviceRoutes = ref([]);\n\n    const geteRoles = async () => {\n      const res = await getRolesApi();\n      rolesList.value = res.data;\n    };\n\n    const getRoutes = async () => {\n      const res = await getRoutesApi();\n      serviceRoutes.value = res.data;\n      routes.value = generateRoutes(res.data);\n    };\n\n    const onlyOneShowingChildFuc = (children = [], parent) => {\n      let onlyOneChild = null;\n      const showingChildren = children.filter(item => item.meta && !item.meta.hidden); // const showingChildren = children\n      // When there is only one child route, the child route is displayed by default\n\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0]; // not use path module\n        // 只对children路由加工一次path\n\n        if (onlyOneChild.path[0] !== '/') {\n          if (parent.path !== '/') {\n            onlyOneChild.path = parent.path + '/' + onlyOneChild.path;\n          } else {\n            onlyOneChild.path = '/' + onlyOneChild.path;\n          }\n        }\n\n        return onlyOneChild;\n      } // Show parent if there are no child route to display\n\n\n      if (showingChildren.length === 0) {\n        onlyOneChild = { ...parent,\n          path: ''\n        };\n        return onlyOneChild;\n      }\n\n      return false;\n    }; // 加工routes\n\n\n    const generateRoutes = routes => {\n      const res = [];\n\n      for (let route of routes) {\n        if (route.meta && route.meta.hidden) {\n          continue;\n        }\n\n        const onlyOneShowingChild = onlyOneShowingChildFuc(route.children, route);\n\n        if (route.children && onlyOneShowingChild) {\n          route = onlyOneShowingChild;\n        }\n\n        const data = {\n          // path: basePath + route.path,\n          path: route.path,\n          title: route.meta && route.meta.title\n        }; // recursive child routes\n\n        if (route.children) {\n          data.children = generateRoutes(route.children);\n        }\n\n        res.push(data);\n      }\n\n      return res;\n    };\n\n    const generateArr = routesProduct => {\n      let data = [];\n      routesProduct.forEach(route => {\n        data.push(route);\n\n        if (route.children) {\n          const temp = generateArr(route.children);\n\n          if (temp.length > 0) {\n            data = [...data, ...temp];\n          }\n        }\n      });\n      return data;\n    }; // 获取el-tree节点proxy.$refs.treeRef\n\n\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    const handleEdit = async row => {\n      dialogType.value = 'edit';\n      dialogVisible.value = true;\n      checkStrictly.value = true;\n      role.value = _.cloneDeep(row);\n      nextTick(() => {\n        const roleRoutes = generateRoutes(role.value.routes); // console.log(proxy.$refs.treeRef.setCheckedNodes)\n\n        proxy.$refs.treeRef.setCheckedNodes(generateArr(roleRoutes));\n        checkStrictly.value = false;\n      });\n    };\n\n    const handleDelete = async (index, row) => {\n      ElMessageBox.confirm('Confirm to remove the role?', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(async () => {\n        await deleteRoleApi(row.key);\n        rolesList.value.splice(index, 1);\n        ElMessage({\n          type: 'success',\n          message: 'Delete succed!'\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    const generateTree = (routes, basePath = '/', checkedKeys) => {\n      const res = [];\n\n      for (const route of routes) {\n        const routePath = route.path;\n\n        if (route.children) {\n          route.children = generateTree(route.children, routePath, checkedKeys);\n        }\n\n        if (checkedKeys.includes(routePath) || route.children && route.children.length >= 1) {\n          res.push(route);\n        }\n      }\n\n      return res;\n    };\n\n    const confirmRole = async () => {\n      const isEdit = dialogType.value === 'edit';\n      const checkedKeys = proxy.$refs.treeRef.getCheckedKeys();\n      role.value.routes = generateTree(_.cloneDeep(serviceRoutes.value), '/', checkedKeys);\n\n      if (isEdit) {\n        await updateRoleApi(role.value.key, role.value);\n\n        for (let index = 0; index < rolesList.value.length; index++) {\n          if (rolesList.value[index].key === role.value.key) {\n            rolesList.value.splice(index, 1, Object.assign({}, role.value));\n            break;\n          }\n        }\n      } else {\n        const {\n          data\n        } = await addRoleApi(role.value);\n        role.value.key = data.key;\n        rolesList.value.push(role.value);\n      }\n\n      const {\n        description,\n        key,\n        name\n      } = role.value;\n      dialogVisible.value = false;\n      ElNotification({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>Role Key: ${key}</div>\n            <div>Role Name: ${name}</div>\n            <div>Description: ${description}</div>\n          `,\n        type: 'success'\n      });\n    };\n\n    const handleAddRole = () => {\n      role.value = Object.assign({}, defaultRole);\n\n      if (proxy.$refs.treeRef) {\n        proxy.$refs.treeRef.setCheckedNodes([]);\n      }\n\n      dialogType.value = 'new';\n      dialogVisible.value = true;\n    };\n\n    getRoutes();\n    geteRoles();\n    return (_ctx, _cache) => {\n      const _component_el_button = _resolveComponent(\"el-button\");\n\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n      const _component_el_table = _resolveComponent(\"el-table\");\n\n      const _component_el_input = _resolveComponent(\"el-input\");\n\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n      const _component_el_tree = _resolveComponent(\"el-tree\");\n\n      const _component_el_form = _resolveComponent(\"el-form\");\n\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: handleAddRole\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n      }), _createVNode(_component_el_table, {\n        data: _unref(rolesList),\n        style: {\n          \"width\": \"100%\",\n          \"margin-top\": \"30px\"\n        },\n        border: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          align: \"center\",\n          label: \"Role Key\",\n          width: \"220\"\n        }, {\n          default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.key), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          align: \"center\",\n          label: \"Role Name\",\n          width: \"220\"\n        }, {\n          default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.name), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          align: \"header-center\",\n          label: \"Description\"\n        }, {\n          default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.description), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          align: \"center\",\n          label: \"Operations\"\n        }, {\n          default: _withCtx(scope => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"small\",\n            onClick: $event => handleEdit(scope.row)\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 2\n          }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"danger\",\n            size: \"small\",\n            onClick: $event => handleDelete(scope.$index, scope.row)\n          }, {\n            default: _withCtx(() => [_hoisted_4]),\n            _: 2\n          }, 1032, [\"onClick\"])]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"data\"]), _createVNode(_component_el_dialog, {\n        modelValue: _unref(dialogVisible),\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _isRef(dialogVisible) ? dialogVisible.value = $event : dialogVisible = $event),\n        title: _unref(dialogType) === 'edit' ? 'Edit Role' : 'New Role'\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          model: _unref(role),\n          \"label-width\": \"80px\",\n          \"label-position\": \"left\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _unref(role).name,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _unref(role).name = $event),\n              placeholder: \"Role Name\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Desc\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _unref(role).description,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _unref(role).description = $event),\n              autosize: {\n                minRows: 2,\n                maxRows: 4\n              },\n              type: \"textarea\",\n              placeholder: \"Role Description\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Menus\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tree, {\n              ref: \"treeRef\",\n              \"check-strictly\": _unref(checkStrictly),\n              data: _unref(routesData),\n              props: defaultProps,\n              \"show-checkbox\": \"\",\n              \"node-key\": \"path\",\n              class: \"permission-tree\"\n            }, null, 8, [\"check-strictly\", \"data\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"model\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_button, {\n          type: \"danger\",\n          onClick: _cache[2] || (_cache[2] = $event => _isRef(dialogVisible) //@ts-ignore\n          ? dialogVisible.value = false : dialogVisible = false)\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 1\n        }), _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: confirmRole\n        }, {\n          default: _withCtx(() => [_hoisted_7]),\n          _: 1\n        })])]),\n        _: 1\n      }, 8, [\"modelValue\", \"title\"])]);\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import script from \"./roleView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./roleView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./roleView.vue?vue&type=style&index=0&id=4d0422a4&lang=scss&scoped=true\"\n\nimport exportComponent from \"E:\\\\code\\\\github\\\\zhizhi-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4d0422a4\"]])\n\nexport default __exports__"],"names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key","getChildState","all","none","allWithoutDisable","i","j","length","n","checked","indeterminate","disabled","half","reInitChecked","childNodes","parent","level","store","checkStrictly","getPropertyFromData","prop","props","config","dataProp","nodeIdSeed","Node","constructor","options","text","expanded","visible","isCurrent","canFocus","name","hasOwn","loaded","loading","initialize","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","includes","autoExpandParent","currentNodeKey","currentNode","_initDefaultCheckedNode","updateLeafState","children","insertChild","label","nodeKey","this","nextSibling","index","indexOf","previousSibling","contains","target","deep","some","child","remove","removeChild","batch","getChildren","push","splice","assign","reactive","insertBefore","ref","insertAfter","dataIndex","deregisterNode","removeChildByData","targetNode","callback","expandParent","done","forEach","item","shouldLoadData","loadData","setChecked","doCreateChildren","array","defaultProps","collapse","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","updateChildren","newData","oldData","map","newDataMap","newNodes","isNodeExists","findIndex","keys","call","resolve","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filter","filterNodeMethod","traverse","allHidden","newVal","instanceChanged","getNode","refData","refNode","append","parentData","parentNode","defaultCheckedKeys","checkedKey","setDefaultCheckedKey","getCheckedNodes","leafOnly","includeHalfChecked","checkedNodes","getCheckedKeys","getHalfCheckedNodes","nodes","getHalfCheckedKeys","_getAllNodes","allNodes","_setCheckedKeys","checkedKeys","sort","a","b","cache","create","toString","node2","setCheckedNodes","setCheckedKeys","key2","setDefaultExpandedKeys","getCurrentNode","setCurrentNode","prevCurrentNode","setUserCurrentNode","shouldAutoExpandParent","currNode","setCurrentNodeKey","_sfc_main","defineComponent","type","required","renderContent","Function","setup","ns","useNamespace","nodeInstance","inject","tree","h","_self","ctx","slots","default","class","be","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","provide","broadcastExpanded","accordion","childNode","dragEventsKey","Symbol","useDragNodeHandler","el$","dropIndicator$","dragState","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","treeNodeDragStart","event","treeNode","allowDrag","preventDefault","dataTransfer","effectAllowed","e","emit","treeNodeDragOver","oldDropNode","removeClass","$el","is","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","style","left","right","addClass","treeNodeDragEnd","draggingNodeCopy","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","instance","getCurrentInstance","debugWarn","childrenKey","watch","val","handleSelectChange","nextTick","getNodeKeyUtil","getNodeClass","nodeClassFunc","className","handleClick","expandOnClickNode","handleExpandIconClick","checkOnClickNode","handleCheckChange","handleContextMenu","vnode","stopPropagation","ev","halfCheckedNodes","halfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","CaretRight","_createElementBlock","_ctx","role","tabindex","onClick","_cache","onContextmenu","onDragstart","onDragover","onDragend","onDrop","_createElementVNode","_normalizeClass","_normalizeStyle","paddingLeft","indent","icon","_openBlock","_createBlock","_withModifiers","onChange","_createCommentVNode","openBlock","_createVNode","withDirectives","_Fragment","_renderList","onNodeExpand","useKeydown","treeItems","shallowRef","checkboxItems","onMounted","initTabIndex","onUpdated","from","querySelectorAll","checkbox","setAttribute","handleKeydown","currentItem","code","currentIndex","nextIndex","EVENT_CODE","startIndex","dataset","focus","click","hasInput","useEventListener","_a","checkedItem","ElTreeNode","emptyText","String","Number","highlightCurrent","t","useLocale","isEmpty","computed","every","getNodePath","path","reverse","currentNode2","getCurrentKey","setCurrentKey","handleNodeExpand","updateKeyChildren","formItemContextKey","_toDisplayString","_withDirectives","Tree","app","component","_Tree","ElTree","FOCUSABLE_CHILDREN","FOCUS_STACK","FOCUS_HANDLER","focusableElement","document","activeElement","goingBackward","shiftKey","isFirst","isLast","TrapFocus","beforeMount","el","obtainAllFocusableElements","addEventListener","updated","unmounted","shift","removeEventListener","isValidComponentSize","componentSizes","useRestoreActive","toggle","initialFocus","previousActive","_b","isRef","directives","ElButton","ElFocusTrap","ElInput","ElOverlay","TypeComponents","inheritAttrs","buttonSize","validator","modal","lockScroll","showClose","closeOnClickModal","closeOnPressEscape","closeOnHashChange","center","roundButton","container","boxType","nextZIndex","useZIndex","state","autofocus","beforeClose","cancelButtonText","cancelButtonClass","confirmButtonText","confirmButtonClass","customClass","customStyle","dangerouslyUseHTMLString","distinguishCancelAndClose","inputPattern","inputPlaceholder","inputType","inputValue","inputValidator","inputErrorMessage","message","modalFade","modalClass","showCancelButton","showConfirmButton","title","showInput","action","confirmButtonLoading","cancelButtonLoading","confirmButtonDisabled","editorErrorMessage","validateError","zIndex","typeClass","bm","contentId","useId","inputId","btnSize","form","formItem","iconComponent","TypeComponentsMap","hasMessage","rootRef","headerRef","focusStartRef","inputRef","confirmRef","confirmButtonClasses","async","validate","immediate","_a2","useDraggable","window","onBeforeUnmount","handleAction","handleInputEnter","doClose","$refs","inputRefs","handleClose","useLockscreen","overlayEvent","onCloseRequested","handleWrapperClick","_component_el_focus_trap","persisted","mask","onMousedown","onMouseup","loop","trapped","onReleaseRequested","_","onKeydown","_withKeys","_hoisted_2","_renderSlot","for","_createTextVNode","modelValue","placeholder","invalid","visibility","_hoisted_3","round","size","$event","messageInstance","Map","initInstance","appContext","MessageBoxConstructor","render","body","appendChild","firstElementChild","genContainer","createElement","showMessage","onVanish","delete","vm","onAction","currentMsg","get","proxy","reject","$props","oldVal","isVNode","MessageBox","isClient","Promise","isString","_context","set","MESSAGE_BOX_VARIANTS","MESSAGE_BOX_DEFAULT_OPTS","alert","confirm","prompt","messageBoxFactory","titleOrOpts","isObject","isUndefined","close","clear","_MessageBox","install","globalProperties","$msgbox","$messageBox","$alert","$confirm","$prompt","ElMessageBox","messageConfig","configProviderProps","buildProps","a11y","locale","definePropType","useSizeProp","button","experimentalFeatures","keyboardNavigation","namespace","badgeProps","provideGlobalConfig","renderSlot","max","isDot","hidden","values","content","expose","ElBadge","withInstall","Badge","messageTypes","messageDefaults","mutable","duration","onClose","offset","grouping","repeatNum","appendTo","messageProps","iconPropType","messageEmits","destroy","instances","shallowReactive","getInstance","idx","current","prev","getLastOffset","exposeProxy","Close","messageRef","stopTimer","badgeType","lastOffset","startTimer","stop","clearTimer","keydown","useResizeObserver","seed","normalizeOptions","params","isFunction","normalized","isElement","closeMessage","handler","createMessage","context","userOnClose","onDestroy","createVNode","MessageConstructor","isNumber","closeAll","ElMessage","withInstallFunction","Message","notificationTypes","notificationProps","position","notificationEmits","timer","m","horizontalClass","endsWith","verticalProperty","startsWith","positionStyle","useTimeoutFn","onBeforeLeave","onAfterLeave","onMouseenter","onMouseleave","_resolveDynamicComponent","textContent","margin","innerHTML","_hoisted_4","notifications","GAP_SIZE","notify","verticalOffset","vm2","offsetHeight","NotificationConstructor","orientedNotifications","removedHeight","verticalPos","split","len","pos","parseInt","ElNotification","Notify","_hoisted_5","_hoisted_6","_hoisted_7","__name","__props","rolesList","routes","dialogVisible","dialogType","defaultRole","description","routesData","route","serviceRoutes","geteRoles","res","getRoutes","generateRoutes","onlyOneShowingChildFuc","onlyOneChild","showingChildren","meta","onlyOneShowingChild","generateArr","routesProduct","temp","handleEdit","row","roleRoutes","treeRef","handleDelete","then","catch","err","console","error","generateTree","basePath","routePath","confirmRole","isEdit","handleAddRole","_component_el_button","_component_el_table_column","_component_el_table","_component_el_input","_component_el_form_item","_component_el_tree","_component_el_form","_component_el_dialog","border","align","width","scope","$index","model","autosize","minRows","maxRows","__exports__"],"sourceRoot":""}